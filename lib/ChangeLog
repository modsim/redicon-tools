2013-08-29  version 0.1.20  <s.kondrat@fz-juelich.de>

	* tests/testMolecule.cc: tests setAngleLinear() ok.

	* moleculeAngle.cc: setAngleLinear(): create angle bonds in a
	molecule walking along the 'chain'.

	* angle.cc atom.cc molecule.cc: angle stuff addded.

	* molecule.cc -> molecule.cc, moleculeBonds.cc:

2013-08-26  18:30 CET  version 0.1.19  <s.kondrat@fz-juelich.de>

	* angle.cc: get angle ok, check atoms ok.

	* point3D.cc: angleBetween(): bugfix.

2013-08-26  17:30 CET  version 0.1.18  <s.kondrat@fz-juelich.de>

	* point3D.cc: angleBetween(): tests seem ok.

2013-08-26  version 0.1.17  <s.kondrat@fz-juelich.de>

	* tests/testAtom.cc: bond angle valgrind ok, more tests needed.

2013-08-23  version 0.1.16  <s.kondrat@fz-juelich.de>

	* angle.{cc,h}: bond angles, compiles ok tests needed.

2013-08-07  version 0.1.12  <s.kondrat@fz-juelich.de>

	* bond.{cc,h}: constructor changes the interface to have shift
	eps and constant H.

2013-08-06 20:20 CEST  version 0.1.11  <s.kondrat@fz-juelich.de>

	* moleculePQR.cc etc: bug fixes.

2013-08-06 16:00 CEST  version 0.1.10  <s.kondrat@fz-juelich.de>

	* moleculePDB.cc moleculePQR.cc: tests seem OK.

	* atomPDB.cc atomPQR.cc:

2013-08-05 20:15 CEST  version 0.1.9  <s.kondrat@fz-juelich.de>

	* moleculePDB.cc: add bonds.

2013-08-05 18:15 CEST  version 0.1.8  <s.kondrat@fz-juelich.de>

	* bond: bond between two molecules. Tests (test/testAtom.cc)
	seem ok.

	* molecule, atom: positionSet() -> positionIsSet().

2013-08-05 16:10 CEST  version 0.1.7  <s.kondrat@fz-juelich.de>

	* monatomic.h: mono atomic molecule, derived from Molecule.

2013-08-05 15:30 CEST  version 0.1.6  <s.kondrat@fz-juelich.de>

	* molecule: setPosition(), moveTo() and translateBy().

	* atom: translateBy().

	* point3D: translateBy(), vectorTo(), distanceTo().

2013-08-05 13:45 CEST  version 0.1.5  <s.kondrat@fz-juelich.de>

	* system: tryDelete() to delete molecules.

	* coord3D -> point3D: vector(): get vector to a given point.

2013-08-05 13:00 CEST  version 0.1.4  <s.kondrat@fz-juelich.de>

	* system: std::vector<Molecules>

	* coord3D -> point3D: vector(): get vector to a given point.

2013-08-02 20:00 CEST  version 0.1.3  <s.kondrat@fz-juelich.de>

	* coord3D -> point3D: 

2013-08-02 19:15 CEST  version 0.1.2  <s.kondrat@fz-juelich.de>

	* molecule: rewritten using std::vector<Atom*>.

	* moleculePDBread.cc: read a PDB data (only atoms are read at the
	moment).

2013-08-02 15:30 CEST  version 0.1.1  <s.kondrat@fz-juelich.de>

	* atomString.cc: from PDB string constructor.

2013-08-01 14:30 CEST  version 0.0.11  <s.kondrat@fz-juelich.de>

	* molecule: private shiftSerial() (Attorney for System).

	* molecule, system: changed correspondingly to atom's changes.

	* atom: interface change (hs_radius, mass etc, full and
	simplified constructors, owners: residue, molecule).

2013-07-31 16:30 CEST  version 0.0.10  <s.kondrat@fz-juelich.de>

	* tests/testSystem.cc: tests seems OK.

	* system.{h,cc}: addMolecule(): check overlap etc.

	* molecule.{h,cc}: positionSet(), overlap().

2013-07-31 11:30 CEST  version 0.0.9  <s.kondrat@fz-juelich.de>

	* atom.{h,cc}: positionPtr(), positionCopy(), overlap().

2013-07-30 00:00 CEST  version 0.0.8  <s.kondrat@fz-juelich.de>

	* system: addMolecule(): check exceptions, if molecules
	in/out of the box, if coords set etc.

	* molecule: block/unblock atoms, abort if atom's in use.

	* atom: inUse(), AtomAttorney: block/unblock (for Molecules).

2013-07-30 19:10 CEST  version 0.0.7  <s.kondrat@fz-juelich.de>

	* system.{h,cc}: System of Molecules: more feature to add; tests
	needed!

2013-07-30 18:30 CEST  version 0.0.6  <s.kondrat@fz-juelich.de>

	* tests/: Coord, Atom, Molecule: valgrind tests OK.

	* molecule.{h,cc}: foreachAtom(), throws an exception when a
	user-provided function returns false.

2013-07-30 15:00 CEST  version 0.0.4  <s.kondrat@fz-juelich.de>

	* tests/testMolecule.cc: tests seem fine (valgrind tests
	needed).

	* molecule.{h,cc}: Molecule class. A single atom Molecule so
	far.

2013-07-30 13:00 CEST  version 0.0.3  <s.kondrat@fz-juelich.de>

	* atom.{h,cc}: AtomAttorney  for Molecule and Bond.

2013-07-29 15:45 CEST  Svyatoslav Kondrat  <s.kondrat@fz-juelich.de>

	* tests/test{Coord.cc,Atom.cc}: test programs seem fine.

	* atom.{h,cc}: atom's coords

	* coord3D.{h,c}: 3D coord class.

2013-07-29  Svyatoslav Kondrat  <s.kondrat@fz-juelich.de>

	* atom.{h,cc}: Atom class.
